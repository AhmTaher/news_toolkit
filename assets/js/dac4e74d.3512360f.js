"use strict";(self.webpackChunkflutter_news_toolkit_docs=self.webpackChunkflutter_news_toolkit_docs||[]).push([[618],{3905:(e,t,o)=>{o.d(t,{Zo:()=>s,kt:()=>m});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function p(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),u=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},s=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=u(o),m=r,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||a;return o?n.createElement(f,i(i({ref:t},s),{},{components:o})):n.createElement(f,i({ref:t},s))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var u=2;u<a;u++)i[u]=o[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},866:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>p,toc:()=>u});var n=o(7462),r=(o(7294),o(3905));const a={sidebar_position:8,description:"Learn how to setup continous deployments for your API."},i="API Deployment Setup",p={unversionedId:"project_configuration/api_deployment",id:"project_configuration/api_deployment",title:"API Deployment Setup",description:"Learn how to setup continous deployments for your API.",source:"@site/docs/project_configuration/api_deployment.md",sourceDirName:"project_configuration",slug:"/project_configuration/api_deployment",permalink:"/news_toolkit/project_configuration/api_deployment",draft:!1,editUrl:"https://github.com/flutter/news_toolkit/tree/main/docs/docs/project_configuration/api_deployment.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,description:"Learn how to setup continous deployments for your API."},sidebar:"tutorialSidebar",previous:{title:"App deployment setup",permalink:"/news_toolkit/project_configuration/app_deployment"},next:{title:"Flutter Development",permalink:"/news_toolkit/category/flutter-development"}},l={},u=[{value:"Google Cloud",id:"google-cloud",level:2},{value:"Other",id:"other",level:2},{value:"Accessing Your API",id:"accessing-your-api",level:2}],s={toc:u};function c(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-deployment-setup"},"API Deployment Setup"),(0,r.kt)("p",null,"The Flutter News Toolkit leverages ",(0,r.kt)("a",{parentName:"p",href:"https://dartfrog.vgv.dev/docs/overview"},"Dart Frog")," to simplify backend build by aggregating, composing, and normalizing data from multiple sources. You must deploy your Dart Frog API to serve requests to the internet."),(0,r.kt)("h2",{id:"google-cloud"},"Google Cloud"),(0,r.kt)("p",null,"You can choose to deploy your Dart Frog API to ",(0,r.kt)("a",{parentName:"p",href:"https://cloud.google.com/run/docs/overview/what-is-cloud-run"},"Cloud Run"),", a managed compute platform that lets you run containers directly on top of Google's scalable infrustructure. Learn how to deploy your API to Cloud Run by following the intructions ",(0,r.kt)("a",{parentName:"p",href:"https://dartfrog.vgv.dev/docs/deploy/google-cloud-run"},"here"),". You'll also want to setup a ",(0,r.kt)("a",{parentName:"p",href:"https://cloud.google.com/blog/products/identity-security/enabling-keyless-authentication-from-github-actions"},"GitHub Action Service Account")," to ease the process of authenticating and authorizing GitHub Actions Workflows to Google Cloud."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"You can optionally configure ",(0,r.kt)("a",{parentName:"p",href:"https://cloud.google.com/docs/authentication"},"API authentication")," and ",(0,r.kt)("a",{parentName:"p",href:"https://cloud.google.com/run/docs/authenticating/end-users#cicp-firebase-auth"},"user authentication for your API"),", if desired.")),(0,r.kt)("h2",{id:"other"},"Other"),(0,r.kt)("p",null,"You can also choose to deploy your Dart Frog API to other services, like ",(0,r.kt)("a",{parentName:"p",href:"https://dartfrog.vgv.dev/docs/deploy/aws-app-runner"},"AWS App Runner")," or ",(0,r.kt)("a",{parentName:"p",href:"https://dartfrog.vgv.dev/docs/deploy/digital-ocean-app-platform"},"Digital Ocean App Platform"),"."),(0,r.kt)("h2",{id:"accessing-your-api"},"Accessing Your API"),(0,r.kt)("p",null,"By default your app expects to receive news data from ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost"),". In order to receive data from your deployed API, you must point your app towards your new URL."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you are using an android emulator, you must set ",(0,r.kt)("inlineCode",{parentName:"p"},"https://10.0.2.2:8080")," as the ",(0,r.kt)("inlineCode",{parentName:"p"},"baseUrl")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8080"),".")),(0,r.kt)("p",null,"Create a new ",(0,r.kt)("inlineCode",{parentName:"p"},"ApiClient")," class which extends ",(0,r.kt)("inlineCode",{parentName:"p"},"FlutterNewsExampleApiClient")," and set the ",(0,r.kt)("inlineCode",{parentName:"p"},"baseUrl")," field to your new API URL. Additionally, override any ",(0,r.kt)("inlineCode",{parentName:"p"},"FlutterNewsExampleApiClient")," methods which diverge from your API request schema, and implement them to handle the request appropriately."),(0,r.kt)("p",null,"Finally, edit the ",(0,r.kt)("inlineCode",{parentName:"p"},"main_flavor.dart")," file for every app flavor you want receiving data from your deployed API. Remove the assignment of ",(0,r.kt)("inlineCode",{parentName:"p"},"apiClient")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"FlutterNewsExampleApiClient.localhost")," and assign ",(0,r.kt)("inlineCode",{parentName:"p"},"apiClient")," to an instance of your new API client:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final apiClient = YourNewsApiClient(\n    tokenProvider: tokenStorage.readToken,\n    baseURL: 'https://yourApiBaseURL',\n);\n")))}c.isMDXComponent=!0}}]);