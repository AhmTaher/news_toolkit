"use strict";(self.webpackChunkflutter_news_toolkit_docs=self.webpackChunkflutter_news_toolkit_docs||[]).push([[403],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,h=u["".concat(d,".").concat(m)]||u[m]||p[m]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9156:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:8,description:"Learn how to configure ads in your Flutter news application."},o="Ads",l={unversionedId:"flutter_development/ads",id:"flutter_development/ads",title:"Ads",description:"Learn how to configure ads in your Flutter news application.",source:"@site/docs/flutter_development/ads.md",sourceDirName:"flutter_development",slug:"/flutter_development/ads",permalink:"/news_toolkit/flutter_development/ads",draft:!1,editUrl:"https://github.com/flutter/news_toolkit/tree/main/docs/docs/flutter_development/ads.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,description:"Learn how to configure ads in your Flutter news application."},sidebar:"tutorialSidebar",previous:{title:"Push Notifications",permalink:"/news_toolkit/flutter_development/push_notifications"},next:{title:"In-app purchases",permalink:"/news_toolkit/flutter_development/in_app_purchases"}},d={},s=[{value:"Ads Placement",id:"ads-placement",level:2},{value:"Banner Ads",id:"banner-ads",level:3},{value:"Interstitial Ads",id:"interstitial-ads",level:3},{value:"Sticky Ads",id:"sticky-ads",level:3},{value:"Rewarded Ads",id:"rewarded-ads",level:3}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ads"},"Ads"),(0,r.kt)("h2",{id:"ads-placement"},"Ads Placement"),(0,r.kt)("h3",{id:"banner-ads"},"Banner Ads"),(0,r.kt)("p",null,"In the Flutter News Example, banner ads are introduced as ",(0,r.kt)("a",{parentName:"p",href:"/server_development/blocks"},"blocks")," served from static news data. The static news data contains instances of ",(0,r.kt)("inlineCode",{parentName:"p"},"BannerAdBlock")," which the app renders as ads inside the feed and articles."),(0,r.kt)("p",null,"To introduce banner ads into your app, you can either:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Insert them locally at the client level or"),(0,r.kt)("li",{parentName:"ol"},"Insert them into the data served by your ",(0,r.kt)("a",{parentName:"li",href:"/server_development/connecting_your_data_source"},"data source"),".")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Inserting Banner Ads Locally")),(0,r.kt)("p",null,"To insert banner ads locally, add ",(0,r.kt)("inlineCode",{parentName:"p"},"BannerAdBlocks")," with your desired size into any block feed by adjusting the state emitted by the ",(0,r.kt)("inlineCode",{parentName:"p"},"ArticleBloc")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"FeedBloc"),", respectively."),(0,r.kt)("p",null,"For example, to insert banner ads into the category feed view, edit the ",(0,r.kt)("inlineCode",{parentName:"p"},"FeedBloc._onFeedRequested()")," method to insert a ",(0,r.kt)("inlineCode",{parentName:"p"},"BannerAdBlock")," every 15 blocks, and subsequently emit the updated feed."),(0,r.kt)("p",null,"If you want banner ads to appear outside of a feed view, you can call the ",(0,r.kt)("inlineCode",{parentName:"p"},"BannerAd")," widget constructor with a ",(0,r.kt)("inlineCode",{parentName:"p"},"BannerAdBlock")," at your desired location in the widget tree."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Inserting Banner Ads at the Data Source")),(0,r.kt)("p",null,"Inserting banner ads into content served by your backend API is the same as local insertion, except you can only insert a ",(0,r.kt)("inlineCode",{parentName:"p"},"BannerAdBlock")," into block feeds (such as the article or category feed) and you are unable to prompt a call to build a ",(0,r.kt)("inlineCode",{parentName:"p"},"BannerAd")," elsewhere in the app out-of-the-box."),(0,r.kt)("p",null,"To insert a banner ad on the server, change the behavior of your ",(0,r.kt)("a",{parentName:"p",href:"/server_development/connecting_your_data_source#creating-a-new-data-source"},"custom data source"),". Methods such as ",(0,r.kt)("inlineCode",{parentName:"p"},"getFeed()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"getArticle()")," should insert a ",(0,r.kt)("inlineCode",{parentName:"p"},"BannerAdBlock")," into the blocks returned from the server at your desired positions."),(0,r.kt)("p",null,"Be sure to update the ",(0,r.kt)("inlineCode",{parentName:"p"},"totalBlocks")," metadata returned by the server to reflect the total number of blocks served to the client. This ensures that the client renders all content properly."),(0,r.kt)("h3",{id:"interstitial-ads"},"Interstitial Ads"),(0,r.kt)("p",null,"Interstitial ads are full-screen ads that appear between content. By default, interstitial ads are displayed upon article entry by ",(0,r.kt)("inlineCode",{parentName:"p"},"_ArticleViewState"),"'s ",(0,r.kt)("inlineCode",{parentName:"p"},"initState")," method in ",(0,r.kt)("inlineCode",{parentName:"p"},"lib/article/view/article_page.dart"),". To remove interstitial ads entirely, you can delete"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"context.read<FullScreenAdsBloc>().add(const ShowInterstitialAdRequested());\n")),(0,r.kt)("p",null,"Alternatively, you can move that line to a location to execute after your desired event (e.g. upon article close)."),(0,r.kt)("h3",{id:"sticky-ads"},"Sticky Ads"),(0,r.kt)("p",null,"Sticky ads are small dismissible ads that are anchored to the bottom of the screen. Sticky ads are built by the ",(0,r.kt)("inlineCode",{parentName:"p"},"StickyAd")," widget. In the template, there is a sticky ad placed in ",(0,r.kt)("inlineCode",{parentName:"p"},"ArticleContent")," inside ",(0,r.kt)("inlineCode",{parentName:"p"},"lib/article/widgets/article_content.dart"),". Move the ",(0,r.kt)("inlineCode",{parentName:"p"},"StickyAd()")," constructor if you want to change which screen sticky ads are shown on."),(0,r.kt)("h3",{id:"rewarded-ads"},"Rewarded Ads"),(0,r.kt)("p",null,"Rewarded ads allow the user to view an advertisement to enable a desired action. In the template, unsubscribed users have the opportunity to watch a rewarded ad after viewing four articles, which unlocks the ability to view an additional article. Rewarded ads are built inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"SubscribeWithArticleLimitModal")," widget in the ",(0,r.kt)("inlineCode",{parentName:"p"},"lib/subscriptions/widgets/subscribe_with_article_limit_modal.dart")," file."),(0,r.kt)("p",null,"The line"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"context.read<FullScreenAdsBloc>().add(const ShowRewardedAdRequested())\n")),(0,r.kt)("p",null,"is executed upon tapping the ",(0,r.kt)("inlineCode",{parentName:"p"},"Watch a video to view this article")," button on the modal bottom sheet. Move the above line to trigger a rewarded ad at your desired position inside the app. Make sure to create a ",(0,r.kt)("inlineCode",{parentName:"p"},"HasWatchedRewardedAdListener")," similar to the one found in ",(0,r.kt)("inlineCode",{parentName:"p"},"lib/article/view/article_page.dart")," to display the desired content after the user has watched the rewarded ad."))}p.isMDXComponent=!0}}]);